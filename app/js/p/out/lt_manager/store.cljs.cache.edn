;; Analyzed by ClojureScript 1.7.228
{:use-macros nil, :excludes #{}, :name lt-manager.store, :imports nil, :requires {reagent reagent.core, reagent.core reagent.core}, :uses nil, :defs {store {:protocol-inline nil, :meta {:file "/home/judith/projects/lt-manager/src/cljs/lt_manager/store.cljs", :line 6, :column 7, :end-line 6, :end-column 12, :arglists (quote ([k obj]))}, :name lt-manager.store/store, :variadic false, :file "src/cljs/lt_manager/store.cljs", :end-column 12, :method-params ([k obj]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 2, :fn-var true, :arglists (quote ([k obj]))}, keywordify {:protocol-inline nil, :meta {:file "/home/judith/projects/lt-manager/src/cljs/lt_manager/store.cljs", :line 9, :column 7, :end-line 9, :end-column 17, :arglists (quote ([m]))}, :name lt-manager.store/keywordify, :variadic false, :file "src/cljs/lt_manager/store.cljs", :end-column 17, :method-params ([m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 1, :fn-var true, :arglists (quote ([m]))}, fetch {:protocol-inline nil, :meta {:file "/home/judith/projects/lt-manager/src/cljs/lt_manager/store.cljs", :line 15, :column 7, :end-line 15, :end-column 12, :arglists (quote ([k default]))}, :name lt-manager.store/fetch, :variadic false, :file "src/cljs/lt_manager/store.cljs", :end-column 12, :method-params ([k default]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 2, :fn-var true, :arglists (quote ([k default]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:else}, :order [:else]}, :doc nil}